from django.contrib.auth import get_user_model
from classes.neo_classes import UserToNeo

class CustomUserAuth(object):

    def authenticate(self, username=None, password=None):
        try:
            user = get_user_model().objects.get(email=username)
            
            print("I found this user",user.id)
            if user.check_password(password):
                return user
        except get_user_model().DoesNotExist:
            print("there is no any user like this")
            return None

    def get_user(self, user_id):
        try:
            user = get_user_model().objects.get(pk=user_id)
            if user.is_active:
                return user
            return None
        except get_user_model().DoesNotExist:
            return None
    def createUserToNeoByEmail(self, emailpar):
        usertoneo = UserToNeo
        user = get_user_model().objects.get(email=emailpar)
        result = self.getUserById(user.id)
        print('result',result)
        if result is not None and 0<len(result):
            return False
        else:
            print('create user to NEO')
            self.createCriteria(user)
            return True